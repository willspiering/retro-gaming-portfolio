---
import { themes } from '../themes';

export interface Props {
  title: string;
}

const { title } = Astro.props;
---
<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<link href="https://fonts.googleapis.com/css2?family=Press+Start+2P&family=Roboto:wght@400;700&display=swap" rel="stylesheet">
	</head>
	<body>
		<slot />
	</body>
</html>
<style is:global define:vars={themes[0].colors}>
  :root {
    --bg-color: var(--bgColor);
    --text-color: var(--textColor);
    --border-color: var(--borderColor);
    --header-bg: var(--headerBg);
    --card-bg: var(--cardBg);
    --highlight-color: var(--highlightColor);
    --secondary-color: var(--secondaryColor);
    --accent-color: var(--accentColor);
    --muted-color: var(--mutedColor);
    --link-color: var(--linkColor);
    --link-hover-color: var(--linkHoverColor);
  }

  body {
    font-family: 'Roboto', sans-serif;
    line-height: 1.6;
    color: var(--text-color);
    background-color: var(--bg-color);
    margin: 0;
    padding: 0;
  }

  h1, h2, h3, h4 {
    font-family: 'Press Start 2P', cursive;
    font-weight: normal;
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  .pixel-border {
    border: 4px solid var(--border-color);
    position: relative;
    padding: 15px;
    background-color: var(--card-bg);
    box-shadow: 0 0 0 4px var(--bg-color), 0 0 0 8px var(--border-color);
  }

  .section {
    margin-bottom: 30px;
  }

  .section-title {
    display: flex;
    align-items: center;
    margin-bottom: 15px;
  }

  .section-title::before {
    content: '';
    display: inline-block;
    width: 20px;
    height: 20px;
    margin-right: 10px;
    background-color: var(--highlight-color);
    clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
  }

  /* Add any other global styles here */
</style>

<script>
  import { getThemeByName } from '../themes';

  function applyTheme(themeName: string) {
    const theme = getThemeByName(themeName);
    Object.entries(theme.colors).forEach(([key, value]) => {
      document.documentElement.style.setProperty(`--${key}`, value);
    });
  }

  // Apply theme on load
  const savedTheme = localStorage.getItem('selectedTheme') || 'retroComputer';
  applyTheme(savedTheme);

  // Listen for theme change events
  document.addEventListener('themeChange', (e: Event) => {
    const customEvent = e as CustomEvent;
    const newTheme = customEvent.detail.theme;
    applyTheme(newTheme);
    localStorage.setItem('selectedTheme', newTheme);
  });
</script>
